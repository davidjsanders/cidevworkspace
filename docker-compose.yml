version: '3.7'

services:
  socat:
    # Reference: https://blog.mikesir87.io/2018/07/letting-traefik-run-on-worker-nodes/
    # Using socat allows the redirection of the docker sock and means only socat has
    # to run on managers
    image: alpine/socat:1.0.3
    command: tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - cidev_network
  traefik:
    # Reference: https://blog.mikesir87.io/2018/07/letting-traefik-run-on-worker-nodes/
    # Using socat allows the redirection of the docker sock and means only socat has
    # to run on managers. Here, traefik is running on any worker node and using the
    # swarm mesh to route traffic in.
    #
    image: traefik:v1.7-alpine  # The official Traefik docker image
    volumes:
      - ./config/traefik.toml:/etc/traefik/traefik.toml
      - ./selfsigned.crt:/certs/selfsigned.crt
      - ./selfsigned.key:/certs/selfsigned.key
    ports:
      - "80:80"      # The HTTP port
      - "443:443"    # The HTTPS port
      - "8080:8080"  # The Web UI (enabled by --api)
    networks:
      - cidev_network
    restart: always
    depends_on:
      - socat
  cadvisor:
    image: google/cadvisor
    command: --http_digest_realm="localhost/cadvisor"
    volumes:
     - /:/rootfs:ro
     - /var/run:/var/run:rw
     - /sys:/sys:ro
     - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - traefik
    networks:
      - cidev_network
    labels:
      traefik.enable: "true"
      traefik.ca.frontend.entryPoints: https
      traefik.ca.docker.network: cidev_network
      traefik.ca.backend: "cadvisor"
      traefik.ca.frontend.rule: "PathPrefix:/"
      traefik.ca.backend.protocol: http
      traefik.ca.port: 8080
  grafana:
    image: grafana/grafana
    command: -config=/etc/grafana/grafana.ini
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - cidev_network
    depends_on:
      - prometheus
    labels:
      traefik.ui.frontend.entryPoints: https
      traefik.enable: "true"
      traefik.ui.docker.network: cidev_network
      traefik.ui.frontend.passHostHeader: true
      traefik.ui.backend: "grafana"
      traefik.ui.frontend.rule: "Host:dasander-air.local;PathPrefixStrip: /grafana"
      traefik.ui.port: 3000
      traefik.ui.backend.protocol: http
  prometheus:
    image: prom/prometheus:latest
    command: --web.external-url=https://dasander-air.local/prometheus --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    # depends_on:
    #   - cadvisor
    labels:
      traefik.ui.frontend.entryPoints: https
      traefik.enable: "true"
      traefik.ui.docker.network: cidev_network
      traefik.ui.backend: "prometheus"
      traefik.ui.frontend.rule: "Host:dasander-air.local;PathPrefix: /prometheus"
      traefik.ui.port: 9090
      traefik.ui.backend.protocol: http
    networks:
      - cidev_network
  sonarqube:
    image: sonarqube:7.5-community
    volumes:
      - cidev_sonar_conf:/opt/sonarqube/conf
      - cidev_sonar_data:/opt/sonarqube/data
      - cidev_sonar_logs:/opt/sonarqube/logs
      - cidev_sonar_extensions:/opt/sonarqube/extensions
      - ./config/sonar.properties:/opt/sonarqube/conf/sonar.properties
    networks:
      - cidev_network
    labels:
      traefik.ui.frontend.entryPoints: https
      traefik.enable: "true"
      traefik.ui.docker.network: cidev_network
      traefik.ui.backend: "sonarqube"
      traefik.ui.frontend.rule: "Host:dasander-air.local;PathPrefix: /sonarqube"
      traefik.ui.port: 9000
      traefik.ui.backend.protocol: http
  jenkins:
    image: dsanderscan/cidev-jenkins:dev-0.2-2.164
    command: --prefix=/jenkins
    volumes:
      - cidev_jenkins:/var/jenkins_home
    ports:
      - 50000:50000
    networks:
      - cidev_network
    environment:
      - DOCKER_HOST=tcp://socat:2375
    labels:
      traefik.enable: "true"
      traefik.ui.frontend.entryPoints: https
      traefik.ui.docker.network: cidev_network
      traefik.ui.frontend.rule: "PathPrefix: /jenkins"
      traefik.ui.port: 8080
      traefik.ui.frontend.passHostHeader: false
      traefik.ui.backend: "backend-jenkins-docker"
      traefik.ui.backend.protocol: http
    restart: always
  nexus3:
    image: dsanderscan/nexus3:dev-0.1-3.15.2
    volumes:
      - cidev_nexus:/nexus-data
      - cidev_nexus_userroot:/userRoot
      - cidev_nexus_blobs:/blob-store
      - ./config/nexus.properties:/nexus-data/etc/nexus.properties
    networks:
      - cidev_network
    environment:
      - "INSTALL4J_ADD_VM_PARAMS=-Djava.util.prefs.userRoot=/userRoot"
    labels:
      traefik.ui.frontend.entryPoints: https
      traefik.enable: "true"
      traefik.ui.docker.network: cidev_network
      traefik.ui.backend: "nexus-ui"
      traefik.ui.frontend.rule: "PathPrefix: /nexus"
      traefik.ui.frontend.passHostHeader: false
      traefik.ui.port: 8081
      traefik.registry.backend: "docker-hub"
      traefik.ui.backend.protocol: http
      #
      # For Docker to work, it must be host.domain.tld
      #
      traefik.registry.frontend.rule: "Host: docker-hub.dsanders.com"
      traefik.registry.port: 18080
      traefik.registry.frontend.passHostHeader: true
      traefik.prireg.backend: "docker-private"
      #
      # For Docker to work, it must be host.domain.tld
      #
      traefik.prireg.frontend.rule: "Host: docker-private.dsanders.com"
      traefik.prireg.port: 18081
    restart: always
networks:
  cidev_network:
volumes:
  grafana_data:
  cidev_sonar_conf:
    external: true
  cidev_sonar_data:
    external: true
  cidev_sonar_logs:
    external: true
  cidev_sonar_extensions:
    external: true
  cidev_jenkins:
    external: true
  cidev_nexus:
    external: true
  cidev_nexus_userroot:
    external: true
  cidev_nexus_blobs:
    external: true
